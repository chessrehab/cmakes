NASM COMPILE  nasm -f elf -g -F stabs filename.asm	compiling the asm source file
NASM COMPILE ld -o outputfile filename.o		linking the object file to output executable elf
NASM COMPILE ld -m elf_i386 -o outputfile filename.o	linking object file on 32 bit mode
NASM COMPILE nasm -f elf32 -g -F stabs filename.asm	compiling for 32 bit assembly
NASM COMPILE nasm -f -g -F stabs			-f (format of the file) -g (include debug info) -F (format of debug info stabs/dwarf)

OBJDUMP objdump -D executablefile			object dump in assembly of executablefile
OBJDUMP objdump -D executable | grep -A20 main		grep main function from dissasembled executable
OBJDUMP objdump --disassembler-options="intel"		intel syntax
OBJDUMP objdump -M intel				intel syntax

GDB gdb -q executablefile				quiet  mode
GDB break main						set the breakpoint to symbol <main>
GDB del break 1						delete breakpoint
GDB info registers					show register values
GDB run							run program
GDB cont						continue
GDB kill						kill debugged program
GDB quit						quit gdb
GDB set disassembly intel				set dissasembly mode
GDB list						list the source code
GDB disassemble _section				disasemble the named section
GDB i r eip						info register eip
GDB x/x $eip						eXamine contents(in heX) of memory stored in register eip
GDB x/t $reg						eXamine contents(in binary) on the address pointed to by register
GDB x/u $reg						eXamine contents(in unsigned int) on the address pointed to by register
GDB x/20xw ADDR						eXamine 20 words(4b) units of content (in heX) at address
GDB x/20xb ADDR						eXamine 20 bytes (in heX) at address
GDB x/20xg ADDR						eXamine 20 giants(8b) (in heX) at address
GDB x/20xh ADDR						eXamine 20 halfwords(2b) (in heX) at address
GDB x/i ADDR($reg)					eXamine instruction at address
GDB x/4i ADDR($reg)					eXamine 4 consecutive instructions at address
GDB print $reg-4					store address $reg-4 in $1
GDB nexti						next instruction exec
GDB x/cb ADDR						eXamine byte and display as char
GDB x/6cb ADDR						eXamine 6 chars starting at address
GDB x/s ADDR						eXamine a NUL terminated string starting at addr
GDB bt							backtrace the stack


NASM INSTR mov dest,source				copy value from source to destination
NASM INSTR mov dest,[source]				copy value pointed to by address source to dest
NASM INSTR mov [dest],source				copy source to memory address poinbted to by dest
NASM INSTR xchg dest,source				exchange values between source and destination



MASM 


